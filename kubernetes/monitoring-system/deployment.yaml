apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: monitor
  name: monitor
  namespace: "monitoring-system"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: monitor
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: monitor
      annotations:
        sidecar.istio.io/inject: "false"
        scheduler.alpha.kubernetes.io/critical-pod: ""
    spec:
      serviceAccountName: monitor
      containers:
      - image: prom/blackbox-exporter:latest
        imagePullPolicy: Always
        name: blackbox-exporter
        resources: {}
      - image: prom/alertmanager:latest
        imagePullPolicy: Always
        name: alertmanager
        ports:
        - containerPort: 9093
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /etc/alertmanager/alertmanager.yml
          subPath: alertmanager.yml
          name: alertmanager-yml
      - image: prom/prometheus:v2.3.2
        imagePullPolicy: Always
        name: prometheus
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
        ports:
        - containerPort: 9090
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /etc/prometheus/prometheus.yml
          subPath: prometheus.yml
          name: prometheus-yml
        - mountPath: /etc/prometheus/alert.rules.yml
          subPath: alert.rules.yml
          name: alert-rules-yml
        - mountPath: /prometheus
          name: prometheus-data
        securityContext:
          runAsUser: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - image: grafana/grafana:5.2.0
        imagePullPolicy: Always
        name: grafana
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: monitor-secret
              key: gf-security-admin-password
        ports:
        - containerPort: 3000
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /etc/grafana/grafana.ini
          subPath: grafana.ini
          name: grafana-ini
        - mountPath: /etc/grafana/provisioning/datasources/datasource.yaml
          subPath: datasource.yaml
          name: grafana-datasource
        - mountPath: /var/lib/grafana
          name: grafana-data
        securityContext:
          runAsUser: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: alertmanager-yml
        configMap:
          name: alertmanager-yml
      - name: prometheus-yml
        configMap:
          name: prometheus-yml
      - name: alert-rules-yml
        configMap:
          name: alert-rules-yml
      - name: prometheus-data
        persistentVolumeClaim:
          claimName: prometheus-data
      - name: grafana-ini
        configMap:
          name: grafana-ini
      - name: grafana-datasource
        configMap:
          name: grafana-datasource
      - name: grafana-data
        persistentVolumeClaim:
          claimName: grafana-data
